<?xml version="1.0" encoding="UTF-8"?><!-- JBoss, Home of Professional Open Source Copyright 2012, Red Hat, Inc. 
    and/or its affiliates, and individual contributors by the @authors tag. See 
    the copyright.txt in the distribution for a full listing of individual contributors. 
    Licensed under the Apache License, Version 2.0 (the "License"); you may not 
    use this file except in compliance with the License. You may obtain a copy 
    of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required 
    by applicable law or agreed to in writing, software distributed under the 
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
    OF ANY KIND, either express or implied. See the License for the specific 
    language governing permissions and limitations under the License. --><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.jboss.jbpapp-10880</groupId>
    <artifactId>test-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>J.A.R.V.I.S-micro</name>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <distribution>repo</distribution>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
        </license>
    </licenses>
    
    <properties>
        <!-- JBoss dependency versions 
        <version.org.jboss.as.plugins.maven.plugin>7.3.Final</version.org.jboss.as.plugins.maven.plugin>
        -->
        <version.ear.plugin>2.8</version.ear.plugin>
        <version.war.plugin>2.1.1</version.war.plugin>
        <version.org.jboss.security.jbosssx>2.0.5.SP3-1</version.org.jboss.security.jbosssx>
    </properties>

    <!-- This quickstart consists of a server side component and a client that accesses
	 the server side component. Each component has its own self contain pom. However,
	 you can add these modules here to keep things modular.
	 -->
    <modules>
      <module>common</module>
      <module>client</module>
      <module>server</module>
      <module>test-standalone-client</module>
    </modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.javaee</groupId>
				<artifactId>jboss-ejb-api</artifactId>
				<version>3.0.0.CR1</version>
				<!-- provided makes this a goner from reactor -->
				<scope>provided</scope>
			</dependency>
			<!-- Import the CDI API, we use provided scope as the API is included in JBoss AS 7 -->
	        <dependency>
	            <groupId>javax.enterprise</groupId>
	            <artifactId>cdi-api</artifactId>
	            <version>1.1</version>
	            <scope>provided</scope>
	        </dependency>
	
	
	        <!-- Import the Common Annotations API (JSR-250), we use provided scope
	            as the API is included in JBoss AS 7 -->
	        <dependency>
	            <groupId>org.jboss.spec.javax.annotation</groupId>
	            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
	            <version>1.0.1.Final</version>
	            <scope>provided</scope>
	        </dependency>
	
	        <!-- Import the JSF API, we use provided scope as the API is included in JBoss AS 7 -->
	        <dependency>
	            <groupId>org.jboss.spec.javax.faces</groupId>
	            <artifactId>jboss-jsf-api_2.1_spec</artifactId>
	            <version>2.1.23.Final</version>
	            <scope>provided</scope>
	        </dependency>
	        <dependency>
               <groupId>org.jboss.spec.javax.servlet</groupId>
               <artifactId>jboss-servlet-api_3.0_spec</artifactId>
               <version>1.0.2.Final</version>
               <scope>provided</scope>
          </dependency> 
          <dependency>
        		<groupId>org.jboss.security</groupId>
        		<artifactId>jbosssx</artifactId>
        		<version>${version.org.jboss.security.jbosssx}</version>
        		<scope>compile</scope>
      	  </dependency>
		</dependencies>
	</dependencyManagement>

    <build>
        <plugins>
            <!-- The JBoss AS plugin deploys your apps to a local JBoss AS 
                container -->
            <!-- Disabling it here means that we don't try to deploy this POM! -->
            <!--
            <plugin>
                <groupId>org.jboss.as.plugins</groupId>
                <artifactId>jboss-as-maven-plugin</artifactId>
                <version>${version.org.jboss.as.plugins.maven.plugin}</version>
                <inherited>true</inherited>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            -->
            <plugin>
           		<groupId>org.apache.maven.plugins</groupId>
           		<artifactId>maven-compiler-plugin</artifactId>
           		<version>2.3.1</version>
           		<configuration>
               		<source>1.6</source>
               		<target>1.6</target>
           		</configuration>
       		</plugin>
        </plugins>
        <pluginManagement>
			<plugins>
				<plugin>
                	<groupId>org.apache.maven.plugins</groupId>
                	<artifactId>maven-ear-plugin</artifactId>
                	<version>${version.ear.plugin}</version>
                	<!-- configuring the ear plugin -->
                	<configuration>
                    	<!-- Tell Maven we are using Java EE 6 -->
                    	<version>6</version>
                    	<!-- Use Java EE ear libraries as needed. Java EE ear libraries 
                        	are in easy way to package any libraries needed in the ear, and automatically 
                        	have any modules (EJB-JARs and WARs) use them -->
                    	<defaultLibBundleDir>lib</defaultLibBundleDir>
	                    <fileNameMapping>no-version</fileNameMapping>
                	</configuration>
            	</plugin>
            	<plugin>
                	<artifactId>maven-war-plugin</artifactId>
                	<version>${version.war.plugin}</version>
                	<configuration>
                    	<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
                    	<failOnMissingWebXml>false</failOnMissingWebXml>
                	</configuration>
            	</plugin>
			</plugins>
		</pluginManagement>
    </build>
	
</project>
